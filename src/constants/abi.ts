export const abi = [
  {
    type: 'constructor',
    stateMutability: 'undefined',
    payable: false,
    inputs: [
      { type: 'address', name: 'vrfCoordinatorV2' },
      { type: 'uint256', name: 'entranceFee' },
      { type: 'bytes32', name: 'gasLane' },
      { type: 'uint64', name: 'subscriptionId' },
      { type: 'uint32', name: 'callbackGasLimit' },
      { type: 'uint256', name: 'interval' },
    ],
  },
  { type: 'error', name: 'Lottery__Closed', inputs: [] },
  { type: 'error', name: 'Lottery__FailedToSendWinnings', inputs: [] },
  { type: 'error', name: 'Lottery__InvalidEntranceFee', inputs: [] },
  {
    type: 'error',
    name: 'Lottery__UpkeepNotNeeded',
    inputs: [
      { type: 'uint256', name: 'currentBalance' },
      { type: 'uint256', name: 'numPlayers' },
      { type: 'uint256', name: 'raffleState' },
    ],
  },
  {
    type: 'error',
    name: 'OnlyCoordinatorCanFulfill',
    inputs: [
      { type: 'address', name: 'have' },
      { type: 'address', name: 'want' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    name: 'Lottery__NewPlayer',
    inputs: [{ type: 'address', name: 'player', indexed: true }],
  },
  {
    type: 'event',
    anonymous: false,
    name: 'Lottery__WinnerPicked',
    inputs: [{ type: 'address', name: 'winner', indexed: true }],
  },
  {
    type: 'function',
    name: 'checkUpkeep',
    constant: true,
    stateMutability: 'view',
    payable: false,
    inputs: [{ type: 'bytes', name: '' }],
    outputs: [
      { type: 'bool', name: 'upkeepNeeded' },
      { type: 'bytes', name: '' },
    ],
  },
  {
    type: 'function',
    name: 'enter',
    constant: false,
    stateMutability: 'payable',
    payable: true,
    inputs: [],
    outputs: [],
  },
  {
    type: 'function',
    name: 'getCallbackGasLimit',
    constant: true,
    stateMutability: 'view',
    payable: false,
    inputs: [],
    outputs: [{ type: 'uint32', name: '' }],
  },
  {
    type: 'function',
    name: 'getEntranceFee',
    constant: true,
    stateMutability: 'view',
    payable: false,
    inputs: [],
    outputs: [{ type: 'uint256', name: '' }],
  },
  {
    type: 'function',
    name: 'getGasLane',
    constant: true,
    stateMutability: 'view',
    payable: false,
    inputs: [],
    outputs: [{ type: 'bytes32', name: '' }],
  },
  {
    type: 'function',
    name: 'getInterval',
    constant: true,
    stateMutability: 'view',
    payable: false,
    inputs: [],
    outputs: [{ type: 'uint256', name: '' }],
  },
  {
    type: 'function',
    name: 'getLastTimeStamp',
    constant: true,
    stateMutability: 'view',
    payable: false,
    inputs: [],
    outputs: [{ type: 'uint256', name: '' }],
  },
  {
    type: 'function',
    name: 'getNumWords',
    constant: true,
    stateMutability: 'pure',
    payable: false,
    inputs: [],
    outputs: [{ type: 'uint256', name: '' }],
  },
  {
    type: 'function',
    name: 'getNumberOfPlayers',
    constant: true,
    stateMutability: 'view',
    payable: false,
    inputs: [],
    outputs: [{ type: 'uint256', name: '' }],
  },
  {
    type: 'function',
    name: 'getPlayer',
    constant: true,
    stateMutability: 'view',
    payable: false,
    inputs: [{ type: 'uint256', name: 'index' }],
    outputs: [{ type: 'address', name: '' }],
  },
  {
    type: 'function',
    name: 'getRecentWinner',
    constant: true,
    stateMutability: 'view',
    payable: false,
    inputs: [],
    outputs: [{ type: 'address', name: '' }],
  },
  {
    type: 'function',
    name: 'getRequestConfirmations',
    constant: true,
    stateMutability: 'pure',
    payable: false,
    inputs: [],
    outputs: [{ type: 'uint256', name: '' }],
  },
  {
    type: 'function',
    name: 'getState',
    constant: true,
    stateMutability: 'view',
    payable: false,
    inputs: [],
    outputs: [{ type: 'uint8', name: '' }],
  },
  {
    type: 'function',
    name: 'getSubscriptionId',
    constant: true,
    stateMutability: 'view',
    payable: false,
    inputs: [],
    outputs: [{ type: 'uint64', name: '' }],
  },
  {
    type: 'function',
    name: 'getVrfCoordinatorAddress',
    constant: true,
    stateMutability: 'view',
    payable: false,
    inputs: [],
    outputs: [{ type: 'address', name: '' }],
  },
  {
    type: 'function',
    name: 'performUpkeep',
    constant: false,
    payable: false,
    inputs: [{ type: 'bytes', name: '' }],
    outputs: [],
  },
  {
    type: 'function',
    name: 'rawFulfillRandomWords',
    constant: false,
    payable: false,
    inputs: [
      { type: 'uint256', name: 'requestId' },
      { type: 'uint256[]', name: 'randomWords' },
    ],
    outputs: [],
  },
] as const;
